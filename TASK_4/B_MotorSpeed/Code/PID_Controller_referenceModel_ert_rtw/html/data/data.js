var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"PID_Controller_referenceModel","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw","tag":"","groupDisplay":"Main file","code":"/*\r\n * Home License - for personal use only.  Not for government, academic,\r\n * research, commercial, or other organizational use.\r\n *\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'PID_Controller_referenceModel'.\r\n *\r\n * Model version                  : 1.13\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Nov 26 11:17:39 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives:\r\n *    1. RAM efficiency\r\n *    2. MISRA C:2012 guidelines\r\n *    3. Polyspace\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stddef.h>\r\n#include <stdio.h>            /* This example main program uses printf/fflush */\r\n#include \"PID_Controller_referenceModel.h\" /* Model's header file */\r\n\r\n/*\r\n * Associating rt_OneStep with a real-time clock or interrupt service routine\r\n * is what makes the generated code \"real-time\".  The function rt_OneStep is\r\n * always associated with the base rate of the model.  Subrates are managed\r\n * by the base rate from inside the generated code.  Enabling/disabling\r\n * interrupts and floating point context switches are target specific.  This\r\n * example code indicates where these should take place relative to executing\r\n * the generated code step function.  Overrun behavior should be tailored to\r\n * your application needs.  This example simply sets an error status in the\r\n * real-time model and returns from rt_OneStep.\r\n */\r\nvoid rt_OneStep(void);\r\nvoid rt_OneStep(void)\r\n{\r\n  static boolean_T OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n\r\n  /* Check for overrun */\r\n  if (OverrunFlag) {\r\n    return;\r\n  }\r\n\r\n  OverrunFlag = true;\r\n\r\n  /* Save FPU context here (if necessary) */\r\n  /* Re-enable timer or interrupt here */\r\n  /* Set model inputs here */\r\n\r\n  /* Step the model */\r\n  PID_Controller_referenceModel_step();\r\n\r\n  /* Get model outputs here */\r\n\r\n  /* Indicate task complete */\r\n  OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n  /* Restore FPU context here (if necessary) */\r\n  /* Enable interrupts here */\r\n}\r\n\r\n/*\r\n * The example \"main\" function illustrates what is required by your\r\n * application code to initialize, execute, and terminate the generated code.\r\n * Attaching rt_OneStep to a real-time clock is target specific.  This example\r\n * illustrates how you do this relative to initializing the model.\r\n */\r\nint_T main(int_T argc, const char *argv[])\r\n{\r\n  /* Unused arguments */\r\n  (void)(argc);\r\n  (void)(argv);\r\n\r\n  /* Initialize model */\r\n  PID_Controller_referenceModel_initialize();\r\n\r\n  /* Attach rt_OneStep to a timer or interrupt service routine with\r\n   * period 0.01 seconds (the model's base sample time) here.  The\r\n   * call syntax for rt_OneStep is\r\n   *\r\n   *  rt_OneStep();\r\n   */\r\n  printf(\"Warning: The simulation will run forever. \"\r\n         \"Generated ERT main won't simulate model step behavior. \"\r\n         \"To change this behavior select the 'MAT-file logging' option.\\n\");\r\n  fflush((NULL));\r\n  while (1) {\r\n    /*  Perform application tasks here */\r\n  }\r\n\r\n  /* The option 'Remove error status field in real-time model data structure'\r\n   * is selected, therefore the following code does not need to execute.\r\n   */\r\n#if 0\r\n\r\n  /* Disable rt_OneStep here */\r\n#endif\r\n\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_Controller_referenceModel.c","type":"source","group":"model","path":"F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Home License - for personal use only.  Not for government, academic,\r\n * research, commercial, or other organizational use.\r\n *\r\n * File: PID_Controller_referenceModel.c\r\n *\r\n * Code generated for Simulink model 'PID_Controller_referenceModel'.\r\n *\r\n * Model version                  : 1.13\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Nov 26 11:17:39 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives:\r\n *    1. RAM efficiency\r\n *    2. MISRA C:2012 guidelines\r\n *    3. Polyspace\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"PID_Controller_referenceModel.h\"\r\n#include \"PID_Controller_referenceModel_private.h\"\r\n\r\n/* Block signals and states (default storage) */\r\nDW_PID_Controller_referenceMo_T PID_Controller_referenceMode_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU_PID_Controller_reference_T PID_Controller_referenceModel_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY_PID_Controller_reference_T PID_Controller_referenceModel_Y;\r\n\r\n/* Model step function */\r\nvoid PID_Controller_referenceModel_step(void)\r\n{\r\n  /* Sum: '<S2>/Add1' incorporates:\r\n   *  Delay: '<S2>/Delay One Step'\r\n   *  Gain: '<S2>/Gain1'\r\n   *  Gain: '<S2>/Gain2'\r\n   *  Inport: '<Root>/e_k'\r\n   */\r\n  PID_Controller_referenceMode_DW.DelayOneStep_DSTATE += (130.0 *\r\n    PID_Controller_referenceModel_U.e_k) * 0.01;\r\n\r\n  /* Outport: '<Root>/y_k' incorporates:\r\n   *  Delay: '<S1>/Delay One Step1'\r\n   *  Delay: '<S2>/Delay One Step'\r\n   *  Gain: '<S1>/Gain'\r\n   *  Gain: '<S1>/Gain3'\r\n   *  Gain: '<S3>/Gain'\r\n   *  Inport: '<Root>/e_k'\r\n   *  Sum: '<Root>/Add'\r\n   *  Sum: '<S1>/Sum'\r\n   */\r\n  PID_Controller_referenceModel_Y.y_k = (((PID_Controller_referenceModel_U.e_k -\r\n    PID_Controller_referenceMode_DW.DelayOneStep1_DSTATE) * 11.0) * 100.0) +\r\n    ((106.2 * PID_Controller_referenceModel_U.e_k) +\r\n     PID_Controller_referenceMode_DW.DelayOneStep_DSTATE);\r\n\r\n  /* Update for Delay: '<S1>/Delay One Step1' incorporates:\r\n   *  Inport: '<Root>/e_k'\r\n   */\r\n  PID_Controller_referenceMode_DW.DelayOneStep1_DSTATE =\r\n    PID_Controller_referenceModel_U.e_k;\r\n}\r\n\r\n/* Model initialize function */\r\nvoid PID_Controller_referenceModel_initialize(void)\r\n{\r\n  /* (no initialization code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_Controller_referenceModel.h","type":"header","group":"model","path":"F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Home License - for personal use only.  Not for government, academic,\r\n * research, commercial, or other organizational use.\r\n *\r\n * File: PID_Controller_referenceModel.h\r\n *\r\n * Code generated for Simulink model 'PID_Controller_referenceModel'.\r\n *\r\n * Model version                  : 1.13\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Nov 26 11:17:39 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives:\r\n *    1. RAM efficiency\r\n *    2. MISRA C:2012 guidelines\r\n *    3. Polyspace\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_Controller_referenceModel_h_\r\n#define RTW_HEADER_PID_Controller_referenceModel_h_\r\n#ifndef PID_Controller_referenceModel_COMMON_INCLUDES_\r\n#define PID_Controller_referenceModel_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                      /* PID_Controller_referenceModel_COMMON_INCLUDES_ */\r\n\r\n#include \"PID_Controller_referenceModel_types.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T DelayOneStep_DSTATE;          /* '<S2>/Delay One Step' */\r\n  real_T DelayOneStep1_DSTATE;         /* '<S1>/Delay One Step1' */\r\n} DW_PID_Controller_referenceMo_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T e_k;                          /* '<Root>/e_k' */\r\n} ExtU_PID_Controller_reference_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T y_k;                          /* '<Root>/y_k' */\r\n} ExtY_PID_Controller_reference_T;\r\n\r\n/* Block signals and states (default storage) */\r\nextern DW_PID_Controller_referenceMo_T PID_Controller_referenceMode_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU_PID_Controller_reference_T PID_Controller_referenceModel_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY_PID_Controller_reference_T PID_Controller_referenceModel_Y;\r\n\r\n/* Model entry point functions */\r\nextern void PID_Controller_referenceModel_initialize(void);\r\nextern void PID_Controller_referenceModel_step(void);\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'PID_Controller_referenceModel'\r\n * '<S1>'   : 'PID_Controller_referenceModel/D_Controller'\r\n * '<S2>'   : 'PID_Controller_referenceModel/I_Controller'\r\n * '<S3>'   : 'PID_Controller_referenceModel/P_Controller'\r\n */\r\n#endif                         /* RTW_HEADER_PID_Controller_referenceModel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_Controller_referenceModel_private.h","type":"header","group":"model","path":"F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Home License - for personal use only.  Not for government, academic,\r\n * research, commercial, or other organizational use.\r\n *\r\n * File: PID_Controller_referenceModel_private.h\r\n *\r\n * Code generated for Simulink model 'PID_Controller_referenceModel'.\r\n *\r\n * Model version                  : 1.13\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Nov 26 11:17:39 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives:\r\n *    1. RAM efficiency\r\n *    2. MISRA C:2012 guidelines\r\n *    3. Polyspace\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_Controller_referenceModel_private_h_\r\n#define RTW_HEADER_PID_Controller_referenceModel_private_h_\r\n#include \"rtwtypes.h\"\r\n#endif                 /* RTW_HEADER_PID_Controller_referenceModel_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_Controller_referenceModel_types.h","type":"header","group":"model","path":"F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Home License - for personal use only.  Not for government, academic,\r\n * research, commercial, or other organizational use.\r\n *\r\n * File: PID_Controller_referenceModel_types.h\r\n *\r\n * Code generated for Simulink model 'PID_Controller_referenceModel'.\r\n *\r\n * Model version                  : 1.13\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Nov 26 11:17:39 2021\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives:\r\n *    1. RAM efficiency\r\n *    2. MISRA C:2012 guidelines\r\n *    3. Polyspace\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_Controller_referenceModel_types_h_\r\n#define RTW_HEADER_PID_Controller_referenceModel_types_h_\r\n\r\n/* Model Code Variants */\r\n#endif                   /* RTW_HEADER_PID_Controller_referenceModel_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"sharedutility","path":"F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\slprj\\ert\\_sharedutils","tag":"","groupDisplay":"Shared files","code":"/*\r\n * Home License - for personal use only.  Not for government, academic,\r\n * research, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'PID_Controller_referenceModel'.\r\n *\r\n * Model version                  : 1.11\r\n * Simulink Coder version         : 9.6 (R2021b) 14-May-2021\r\n * C/C++ source code generated on : Fri Nov 26 11:07:57 2021\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: Intel->x86-64 (Windows64)\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  64\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"PID_Controller_referenceModel\",\"sources\":[\"PID_Controller_referenceModel.c\",\"PID_Controller_referenceModel.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"Inports\",\"Outports\"],\"sidPrefixes\":[\"PID_Controller_referenceModel\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[35,3,35,9],\"els\":[\"1:14\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[35,10,35,29],\"els\":[\"1:14\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[35,29,35,30],\"els\":[\"1:14\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[36,3,36,9],\"els\":[\"1:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[36,10,36,30],\"els\":[\"1:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[36,30,36,31],\"els\":[\"1:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[41,3,41,9],\"els\":[\"1:1\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[41,10,41,13],\"els\":[\"1:1\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[41,13,41,14],\"els\":[\"1:1\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[46,3,46,9],\"els\":[\"1:24\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[46,10,46,13],\"els\":[\"1:24\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[46,13,46,14],\"els\":[\"1:24\"],\"ct\":{\"1\":1,\"0\":3}}]},\"0\":{\"records\":[{\"tk\":[43,3,43,34],\"els\":[\"0:13\",\"0:14\"]},{\"tk\":[43,35,43,54],\"els\":[\"0:13\",\"0:14\"]},{\"tk\":[43,55,43,57],\"els\":[\"0:13\"]},{\"tk\":[43,59,43,64],\"els\":[\"0:15\"]},{\"tk\":[43,65,43,66],\"els\":[\"0:15\"]},{\"tk\":[44,5,44,36],\"els\":[\"0:1\"]},{\"tk\":[44,37,44,40],\"els\":[\"0:1\"]},{\"tk\":[44,42,44,43],\"els\":[\"0:16\"]},{\"tk\":[44,44,44,48],\"els\":[\"0:16\"]},{\"tk\":[56,3,56,34],\"els\":[\"0:24\"]},{\"tk\":[56,35,56,38],\"els\":[\"0:24\"]},{\"tk\":[56,39,56,40],\"els\":[\"0:24\"]},{\"tk\":[56,44,56,75],\"els\":[\"0:1\"]},{\"tk\":[56,76,56,79],\"els\":[\"0:1\"]},{\"tk\":[56,80,56,81],\"els\":[\"0:8\"]},{\"tk\":[57,5,57,36],\"els\":[\"0:8\",\"0:5\"]},{\"tk\":[57,37,57,57],\"els\":[\"0:8\",\"0:5\"]},{\"tk\":[57,59,57,60],\"els\":[\"0:6\"]},{\"tk\":[57,61,57,65],\"els\":[\"0:6\"]},{\"tk\":[57,67,57,68],\"els\":[\"0:7\"]},{\"tk\":[57,69,57,74],\"els\":[\"0:7\"]},{\"tk\":[57,76,57,77],\"els\":[\"0:2\"]},{\"tk\":[58,7,58,12],\"els\":[\"0:21\"]},{\"tk\":[58,13,58,14],\"els\":[\"0:21\"]},{\"tk\":[58,15,58,46],\"els\":[\"0:1\"]},{\"tk\":[58,47,58,50],\"els\":[\"0:1\"]},{\"tk\":[58,52,58,53],\"els\":[\"0:2\"]},{\"tk\":[59,6,59,37],\"els\":[\"0:2\",\"0:14\"]},{\"tk\":[59,38,59,57],\"els\":[\"0:2\",\"0:14\"]},{\"tk\":[64,3,64,34],\"els\":[\"0:5\"]},{\"tk\":[64,35,64,55],\"els\":[\"0:5\"]},{\"tk\":[64,56,64,57],\"els\":[\"0:5\"]},{\"tk\":[65,5,65,36],\"els\":[\"0:1\"]},{\"tk\":[65,37,65,40],\"els\":[\"0:1\"]}]}}}","blocks":[{"RTWName":"<Root>/e_k","SIDString":"PID_Controller_referenceModel:1"},{"RTWName":"<Root>/Add","SIDString":"PID_Controller_referenceModel:2"},{"RTWName":"<S1>/e_k","SIDString":"PID_Controller_referenceModel:4"},{"RTWName":"<S1>/Delay One Step1","SIDString":"PID_Controller_referenceModel:5"},{"RTWName":"<S1>/Gain","SIDString":"PID_Controller_referenceModel:6"},{"RTWName":"<S1>/Gain3","SIDString":"PID_Controller_referenceModel:7"},{"RTWName":"<S1>/Sum","SIDString":"PID_Controller_referenceModel:8"},{"RTWName":"<S1>/y_d_k","SIDString":"PID_Controller_referenceModel:9"},{"RTWName":"<S2>/e_k","SIDString":"PID_Controller_referenceModel:12"},{"RTWName":"<S2>/Add1","SIDString":"PID_Controller_referenceModel:13"},{"RTWName":"<S2>/Delay One Step","SIDString":"PID_Controller_referenceModel:14"},{"RTWName":"<S2>/Gain1","SIDString":"PID_Controller_referenceModel:15"},{"RTWName":"<S2>/Gain2","SIDString":"PID_Controller_referenceModel:16"},{"RTWName":"<S2>/y_i_k ","SIDString":"PID_Controller_referenceModel:17"},{"RTWName":"<S3>/e_k","SIDString":"PID_Controller_referenceModel:20"},{"RTWName":"<S3>/Gain","SIDString":"PID_Controller_referenceModel:21"},{"RTWName":"<S3>/y_p_k","SIDString":"PID_Controller_referenceModel:22"},{"RTWName":"<Root>/y_k","SIDString":"PID_Controller_referenceModel:24"},{"RTWName":"<Root>/D_Controller","SIDString":"PID_Controller_referenceModel:3"},{"RTWName":"<Root>/I_Controller","SIDString":"PID_Controller_referenceModel:11"},{"RTWName":"<Root>/P_Controller","SIDString":"PID_Controller_referenceModel:19"}],"cm":{"GlobalVarInfo":[{"Name":"PID_Controller_referenceMode_DW","Size":16,"File":["F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw\\PID_Controller_referenceModel.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":5,"Members":[{"Name":"DelayOneStep_DSTATE","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":3}},{"Name":"DelayOneStep1_DSTATE","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":2}}],"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":5}},{"Name":"PID_Controller_referenceModel_U","Size":8,"File":["F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw\\PID_Controller_referenceModel.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":4,"Members":{"Name":"e_k","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":4,"Members":[],"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":4}},"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":4}},{"Name":"PID_Controller_referenceModel_Y","Size":8,"File":["F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw\\PID_Controller_referenceModel.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":{"Name":"y_k","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":1}},"UseInFunctions":{"FunctionName":"PID_Controller_referenceModel_step","UseCount":1}}],"GlobalConstInfo":[],"FcnInfo":[{"Name":"PID_Controller_referenceModel_initialize","UniqueKey":"$PID_Controller_referenceModel_initialize","Idx":1,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw\\PID_Controller_referenceModel.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"PID_Controller_referenceModel_step","UniqueKey":"$PID_Controller_referenceModel_step","Idx":2,"NumCommentLines":19,"NumTotalLines":32,"NumCodeLines":8,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["F:\\Vignesh@@\\College\\Coventry University\\ClassWork\\7146 CEM_ Automotive Software Engineeering_Module 1\\CourseWork\\TASK_4\\B_MotorSpeed\\Code\\PID_Controller_referenceModel_ert_rtw\\PID_Controller_referenceModel.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]}]}};